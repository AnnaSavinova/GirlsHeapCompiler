Terminals unused in grammar

   EXTENDS


State 19 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 91 conflicts: 3 shift/reduce
State 104 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDecls

    2 ClassDecls: /* empty */
    3           | ClassDecl ClassDecls

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    5 ClassDecl: CLASS ID '{' VarDecls MethodDecls '}'

    6 VarDecls: /* empty */
    7         | VarDecl VarDecls

    8 MethodDecls: /* empty */
    9            | MethodDecl MethodDecls

   10 VarDecl: Type ID ';'

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' VarDecls Statements RETURN Exp ';' '}'

   12 Statements: /* empty */
   13           | Statement Statements

   14 FormalList: /* empty */
   15           | Type ID FormalRests

   16 FormalRests: /* empty */
   17            | FormalRest FormalRests

   18 FormalRest: ',' Type ID

   19 Type: INT '[' ']'
   20     | BOOLEAN
   21     | INT
   22     | ID

   23 Statement: '{' Statements '}'
   24          | IF '(' Exp ')' Statement ELSE Statement
   25          | WHILE '(' Exp ')' Statement
   26          | PRINT '(' Exp ')' ';'
   27          | ID '=' Exp ';'
   28          | ID '[' Exp ']' '=' Exp ';'

   29 Exp: Exp BINOP Exp
   30    | Exp '[' Exp ']'
   31    | Exp '.' LENGTH
   32    | Exp '.' ID '(' ExpList ')'
   33    | INTEGER_LITERAL
   34    | TRUE
   35    | FALSE
   36    | ID
   37    | THIS
   38    | NEW INT '[' Exp ']'
   39    | NEW ID '(' ')'
   40    | '!' Exp
   41    | '(' Exp ')'

   42 ExpList: /* empty */
   43        | Exp ExpRests

   44 ExpRests: /* empty */
   45         | ExpRest ExpRests

   46 ExpRest: ',' Exp


Terminals, with rules where they appear

$end (0) 0
'!' (33) 40
'(' (40) 4 11 24 25 26 32 39 41
')' (41) 4 11 24 25 26 32 39 41
',' (44) 18 46
'.' (46) 31 32
';' (59) 10 11 26 27 28
'=' (61) 27 28
'[' (91) 4 19 28 30 38
']' (93) 4 19 28 30 38
'{' (123) 4 5 11 23
'}' (125) 4 5 11 23
error (256)
CLASS (258) 4 5
PUBLIC (259) 4 11
STATIC (260) 4
VOID (261) 4
MAIN (262) 4
STRING (263) 4
EXTENDS (264)
RETURN (265) 11
INT (266) 19 21 38
BOOLEAN (267) 20
IF (268) 24
ELSE (269) 24
WHILE (270) 25
PRINT (271) 26
LENGTH (272) 31
TRUE (273) 34
FALSE (274) 35
THIS (275) 37
NEW (276) 38 39
BINOP (277) 29
INTEGER_LITERAL (278) 33
ID (279) 4 5 10 11 15 18 22 27 28 32 36 39


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
Program (37)
    on left: 1, on right: 0
ClassDecls (38)
    on left: 2 3, on right: 1 3
MainClass (39)
    on left: 4, on right: 1
ClassDecl (40)
    on left: 5, on right: 3
VarDecls (41)
    on left: 6 7, on right: 5 7 11
MethodDecls (42)
    on left: 8 9, on right: 5 9
VarDecl (43)
    on left: 10, on right: 7
MethodDecl (44)
    on left: 11, on right: 9
Statements (45)
    on left: 12 13, on right: 11 13 23
FormalList (46)
    on left: 14 15, on right: 11
FormalRests (47)
    on left: 16 17, on right: 15 17
FormalRest (48)
    on left: 18, on right: 17
Type (49)
    on left: 19 20 21 22, on right: 10 11 15 18
Statement (50)
    on left: 23 24 25 26 27 28, on right: 4 13 24 25
Exp (51)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41, on right: 11 24
    25 26 27 28 29 30 31 32 38 40 41 43 46
ExpList (52)
    on left: 42 43, on right: 32
ExpRests (53)
    on left: 44 45, on right: 43 45
ExpRest (54)
    on left: 46, on right: 45


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    4 MainClass: CLASS . ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    ID  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: MainClass . ClassDecls

    CLASS  shift, and go to state 6

    $default  reduce using rule 2 (ClassDecls)

    ClassDecls  go to state 7
    ClassDecl   go to state 8


State 4

    4 MainClass: CLASS ID . '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    '{'  shift, and go to state 9


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    5 ClassDecl: CLASS . ID '{' VarDecls MethodDecls '}'

    ID  shift, and go to state 10


State 7

    1 Program: MainClass ClassDecls .

    $default  reduce using rule 1 (Program)


State 8

    3 ClassDecls: ClassDecl . ClassDecls

    CLASS  shift, and go to state 6

    $default  reduce using rule 2 (ClassDecls)

    ClassDecls  go to state 11
    ClassDecl   go to state 8


State 9

    4 MainClass: CLASS ID '{' . PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    PUBLIC  shift, and go to state 12


State 10

    5 ClassDecl: CLASS ID . '{' VarDecls MethodDecls '}'

    '{'  shift, and go to state 13


State 11

    3 ClassDecls: ClassDecl ClassDecls .

    $default  reduce using rule 3 (ClassDecls)


State 12

    4 MainClass: CLASS ID '{' PUBLIC . STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    STATIC  shift, and go to state 14


State 13

    5 ClassDecl: CLASS ID '{' . VarDecls MethodDecls '}'

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 6 (VarDecls)

    VarDecls  go to state 18
    VarDecl   go to state 19
    Type      go to state 20


State 14

    4 MainClass: CLASS ID '{' PUBLIC STATIC . VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    VOID  shift, and go to state 21


State 15

   19 Type: INT . '[' ']'
   21     | INT .

    '['  shift, and go to state 22

    $default  reduce using rule 21 (Type)


State 16

   20 Type: BOOLEAN .

    $default  reduce using rule 20 (Type)


State 17

   22 Type: ID .

    $default  reduce using rule 22 (Type)


State 18

    5 ClassDecl: CLASS ID '{' VarDecls . MethodDecls '}'

    PUBLIC  shift, and go to state 23

    $default  reduce using rule 8 (MethodDecls)

    MethodDecls  go to state 24
    MethodDecl   go to state 25


State 19

    7 VarDecls: VarDecl . VarDecls

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    ID        [reduce using rule 6 (VarDecls)]
    $default  reduce using rule 6 (VarDecls)

    VarDecls  go to state 26
    VarDecl   go to state 19
    Type      go to state 20


State 20

   10 VarDecl: Type . ID ';'

    ID  shift, and go to state 27


State 21

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID . MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    MAIN  shift, and go to state 28


State 22

   19 Type: INT '[' . ']'

    ']'  shift, and go to state 29


State 23

   11 MethodDecl: PUBLIC . Type ID '(' FormalList ')' '{' VarDecls Statements RETURN Exp ';' '}'

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    Type  go to state 30


State 24

    5 ClassDecl: CLASS ID '{' VarDecls MethodDecls . '}'

    '}'  shift, and go to state 31


State 25

    9 MethodDecls: MethodDecl . MethodDecls

    PUBLIC  shift, and go to state 23

    $default  reduce using rule 8 (MethodDecls)

    MethodDecls  go to state 32
    MethodDecl   go to state 25


State 26

    7 VarDecls: VarDecl VarDecls .

    $default  reduce using rule 7 (VarDecls)


State 27

   10 VarDecl: Type ID . ';'

    ';'  shift, and go to state 33


State 28

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN . '(' STRING '[' ']' ID ')' '{' Statement '}' '}'

    '('  shift, and go to state 34


State 29

   19 Type: INT '[' ']' .

    $default  reduce using rule 19 (Type)


State 30

   11 MethodDecl: PUBLIC Type . ID '(' FormalList ')' '{' VarDecls Statements RETURN Exp ';' '}'

    ID  shift, and go to state 35


State 31

    5 ClassDecl: CLASS ID '{' VarDecls MethodDecls '}' .

    $default  reduce using rule 5 (ClassDecl)


State 32

    9 MethodDecls: MethodDecl MethodDecls .

    $default  reduce using rule 9 (MethodDecls)


State 33

   10 VarDecl: Type ID ';' .

    $default  reduce using rule 10 (VarDecl)


State 34

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' . STRING '[' ']' ID ')' '{' Statement '}' '}'

    STRING  shift, and go to state 36


State 35

   11 MethodDecl: PUBLIC Type ID . '(' FormalList ')' '{' VarDecls Statements RETURN Exp ';' '}'

    '('  shift, and go to state 37


State 36

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING . '[' ']' ID ')' '{' Statement '}' '}'

    '['  shift, and go to state 38


State 37

   11 MethodDecl: PUBLIC Type ID '(' . FormalList ')' '{' VarDecls Statements RETURN Exp ';' '}'

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 14 (FormalList)

    FormalList  go to state 39
    Type        go to state 40


State 38

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' . ']' ID ')' '{' Statement '}' '}'

    ']'  shift, and go to state 41


State 39

   11 MethodDecl: PUBLIC Type ID '(' FormalList . ')' '{' VarDecls Statements RETURN Exp ';' '}'

    ')'  shift, and go to state 42


State 40

   15 FormalList: Type . ID FormalRests

    ID  shift, and go to state 43


State 41

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' . ID ')' '{' Statement '}' '}'

    ID  shift, and go to state 44


State 42

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' . '{' VarDecls Statements RETURN Exp ';' '}'

    '{'  shift, and go to state 45


State 43

   15 FormalList: Type ID . FormalRests

    ','  shift, and go to state 46

    $default  reduce using rule 16 (FormalRests)

    FormalRests  go to state 47
    FormalRest   go to state 48


State 44

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID . ')' '{' Statement '}' '}'

    ')'  shift, and go to state 49


State 45

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' . VarDecls Statements RETURN Exp ';' '}'

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    ID        [reduce using rule 6 (VarDecls)]
    $default  reduce using rule 6 (VarDecls)

    VarDecls  go to state 50
    VarDecl   go to state 19
    Type      go to state 20


State 46

   18 FormalRest: ',' . Type ID

    INT      shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    ID       shift, and go to state 17

    Type  go to state 51


State 47

   15 FormalList: Type ID FormalRests .

    $default  reduce using rule 15 (FormalList)


State 48

   17 FormalRests: FormalRest . FormalRests

    ','  shift, and go to state 46

    $default  reduce using rule 16 (FormalRests)

    FormalRests  go to state 52
    FormalRest   go to state 48


State 49

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' . '{' Statement '}' '}'

    '{'  shift, and go to state 53


State 50

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' VarDecls . Statements RETURN Exp ';' '}'

    IF     shift, and go to state 54
    WHILE  shift, and go to state 55
    PRINT  shift, and go to state 56
    ID     shift, and go to state 57
    '{'    shift, and go to state 58

    $default  reduce using rule 12 (Statements)

    Statements  go to state 59
    Statement   go to state 60


State 51

   18 FormalRest: ',' Type . ID

    ID  shift, and go to state 61


State 52

   17 FormalRests: FormalRest FormalRests .

    $default  reduce using rule 17 (FormalRests)


State 53

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' . Statement '}' '}'

    IF     shift, and go to state 54
    WHILE  shift, and go to state 55
    PRINT  shift, and go to state 56
    ID     shift, and go to state 57
    '{'    shift, and go to state 58

    Statement  go to state 62


State 54

   24 Statement: IF . '(' Exp ')' Statement ELSE Statement

    '('  shift, and go to state 63


State 55

   25 Statement: WHILE . '(' Exp ')' Statement

    '('  shift, and go to state 64


State 56

   26 Statement: PRINT . '(' Exp ')' ';'

    '('  shift, and go to state 65


State 57

   27 Statement: ID . '=' Exp ';'
   28          | ID . '[' Exp ']' '=' Exp ';'

    '['  shift, and go to state 66
    '='  shift, and go to state 67


State 58

   23 Statement: '{' . Statements '}'

    IF     shift, and go to state 54
    WHILE  shift, and go to state 55
    PRINT  shift, and go to state 56
    ID     shift, and go to state 57
    '{'    shift, and go to state 58

    $default  reduce using rule 12 (Statements)

    Statements  go to state 68
    Statement   go to state 60


State 59

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' VarDecls Statements . RETURN Exp ';' '}'

    RETURN  shift, and go to state 69


State 60

   13 Statements: Statement . Statements

    IF     shift, and go to state 54
    WHILE  shift, and go to state 55
    PRINT  shift, and go to state 56
    ID     shift, and go to state 57
    '{'    shift, and go to state 58

    $default  reduce using rule 12 (Statements)

    Statements  go to state 70
    Statement   go to state 60


State 61

   18 FormalRest: ',' Type ID .

    $default  reduce using rule 18 (FormalRest)


State 62

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement . '}' '}'

    '}'  shift, and go to state 71


State 63

   24 Statement: IF '(' . Exp ')' Statement ELSE Statement

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 80


State 64

   25 Statement: WHILE '(' . Exp ')' Statement

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 81


State 65

   26 Statement: PRINT '(' . Exp ')' ';'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 82


State 66

   28 Statement: ID '[' . Exp ']' '=' Exp ';'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 83


State 67

   27 Statement: ID '=' . Exp ';'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 84


State 68

   23 Statement: '{' Statements . '}'

    '}'  shift, and go to state 85


State 69

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' VarDecls Statements RETURN . Exp ';' '}'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 86


State 70

   13 Statements: Statement Statements .

    $default  reduce using rule 13 (Statements)


State 71

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' . '}'

    '}'  shift, and go to state 87


State 72

   34 Exp: TRUE .

    $default  reduce using rule 34 (Exp)


State 73

   35 Exp: FALSE .

    $default  reduce using rule 35 (Exp)


State 74

   37 Exp: THIS .

    $default  reduce using rule 37 (Exp)


State 75

   38 Exp: NEW . INT '[' Exp ']'
   39    | NEW . ID '(' ')'

    INT  shift, and go to state 88
    ID   shift, and go to state 89


State 76

   33 Exp: INTEGER_LITERAL .

    $default  reduce using rule 33 (Exp)


State 77

   36 Exp: ID .

    $default  reduce using rule 36 (Exp)


State 78

   41 Exp: '(' . Exp ')'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 90


State 79

   40 Exp: '!' . Exp

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 91


State 80

   24 Statement: IF '(' Exp . ')' Statement ELSE Statement
   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ')'    shift, and go to state 94
    '.'    shift, and go to state 95


State 81

   25 Statement: WHILE '(' Exp . ')' Statement
   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ')'    shift, and go to state 96
    '.'    shift, and go to state 95


State 82

   26 Statement: PRINT '(' Exp . ')' ';'
   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ')'    shift, and go to state 97
    '.'    shift, and go to state 95


State 83

   28 Statement: ID '[' Exp . ']' '=' Exp ';'
   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ']'    shift, and go to state 98
    '.'    shift, and go to state 95


State 84

   27 Statement: ID '=' Exp . ';'
   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ';'    shift, and go to state 99
    '.'    shift, and go to state 95


State 85

   23 Statement: '{' Statements '}' .

    $default  reduce using rule 23 (Statement)


State 86

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' VarDecls Statements RETURN Exp . ';' '}'
   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ';'    shift, and go to state 100
    '.'    shift, and go to state 95


State 87

    4 MainClass: CLASS ID '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' ID ')' '{' Statement '}' '}' .

    $default  reduce using rule 4 (MainClass)


State 88

   38 Exp: NEW INT . '[' Exp ']'

    '['  shift, and go to state 101


State 89

   39 Exp: NEW ID . '(' ')'

    '('  shift, and go to state 102


State 90

   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'
   41    | '(' Exp . ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ')'    shift, and go to state 103
    '.'    shift, and go to state 95


State 91

   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'
   40    | '!' Exp .

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    '.'    shift, and go to state 95

    BINOP     [reduce using rule 40 (Exp)]
    '['       [reduce using rule 40 (Exp)]
    '.'       [reduce using rule 40 (Exp)]
    $default  reduce using rule 40 (Exp)


State 92

   29 Exp: Exp BINOP . Exp

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 104


State 93

   30 Exp: Exp '[' . Exp ']'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 105


State 94

   24 Statement: IF '(' Exp ')' . Statement ELSE Statement

    IF     shift, and go to state 54
    WHILE  shift, and go to state 55
    PRINT  shift, and go to state 56
    ID     shift, and go to state 57
    '{'    shift, and go to state 58

    Statement  go to state 106


State 95

   31 Exp: Exp '.' . LENGTH
   32    | Exp '.' . ID '(' ExpList ')'

    LENGTH  shift, and go to state 107
    ID      shift, and go to state 108


State 96

   25 Statement: WHILE '(' Exp ')' . Statement

    IF     shift, and go to state 54
    WHILE  shift, and go to state 55
    PRINT  shift, and go to state 56
    ID     shift, and go to state 57
    '{'    shift, and go to state 58

    Statement  go to state 109


State 97

   26 Statement: PRINT '(' Exp ')' . ';'

    ';'  shift, and go to state 110


State 98

   28 Statement: ID '[' Exp ']' . '=' Exp ';'

    '='  shift, and go to state 111


State 99

   27 Statement: ID '=' Exp ';' .

    $default  reduce using rule 27 (Statement)


State 100

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' VarDecls Statements RETURN Exp ';' . '}'

    '}'  shift, and go to state 112


State 101

   38 Exp: NEW INT '[' . Exp ']'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 113


State 102

   39 Exp: NEW ID '(' . ')'

    ')'  shift, and go to state 114


State 103

   41 Exp: '(' Exp ')' .

    $default  reduce using rule 41 (Exp)


State 104

   29 Exp: Exp . BINOP Exp
   29    | Exp BINOP Exp .
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    '.'    shift, and go to state 95

    BINOP     [reduce using rule 29 (Exp)]
    '['       [reduce using rule 29 (Exp)]
    '.'       [reduce using rule 29 (Exp)]
    $default  reduce using rule 29 (Exp)


State 105

   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   30    | Exp '[' Exp . ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ']'    shift, and go to state 115
    '.'    shift, and go to state 95


State 106

   24 Statement: IF '(' Exp ')' Statement . ELSE Statement

    ELSE  shift, and go to state 116


State 107

   31 Exp: Exp '.' LENGTH .

    $default  reduce using rule 31 (Exp)


State 108

   32 Exp: Exp '.' ID . '(' ExpList ')'

    '('  shift, and go to state 117


State 109

   25 Statement: WHILE '(' Exp ')' Statement .

    $default  reduce using rule 25 (Statement)


State 110

   26 Statement: PRINT '(' Exp ')' ';' .

    $default  reduce using rule 26 (Statement)


State 111

   28 Statement: ID '[' Exp ']' '=' . Exp ';'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 118


State 112

   11 MethodDecl: PUBLIC Type ID '(' FormalList ')' '{' VarDecls Statements RETURN Exp ';' '}' .

    $default  reduce using rule 11 (MethodDecl)


State 113

   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'
   38    | NEW INT '[' Exp . ']'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ']'    shift, and go to state 119
    '.'    shift, and go to state 95


State 114

   39 Exp: NEW ID '(' ')' .

    $default  reduce using rule 39 (Exp)


State 115

   30 Exp: Exp '[' Exp ']' .

    $default  reduce using rule 30 (Exp)


State 116

   24 Statement: IF '(' Exp ')' Statement ELSE . Statement

    IF     shift, and go to state 54
    WHILE  shift, and go to state 55
    PRINT  shift, and go to state 56
    ID     shift, and go to state 57
    '{'    shift, and go to state 58

    Statement  go to state 120


State 117

   32 Exp: Exp '.' ID '(' . ExpList ')'

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    $default  reduce using rule 42 (ExpList)

    Exp      go to state 121
    ExpList  go to state 122


State 118

   28 Statement: ID '[' Exp ']' '=' Exp . ';'
   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ';'    shift, and go to state 123
    '.'    shift, and go to state 95


State 119

   38 Exp: NEW INT '[' Exp ']' .

    $default  reduce using rule 38 (Exp)


State 120

   24 Statement: IF '(' Exp ')' Statement ELSE Statement .

    $default  reduce using rule 24 (Statement)


State 121

   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'
   43 ExpList: Exp . ExpRests

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    ','    shift, and go to state 124
    '.'    shift, and go to state 95

    $default  reduce using rule 44 (ExpRests)

    ExpRests  go to state 125
    ExpRest   go to state 126


State 122

   32 Exp: Exp '.' ID '(' ExpList . ')'

    ')'  shift, and go to state 127


State 123

   28 Statement: ID '[' Exp ']' '=' Exp ';' .

    $default  reduce using rule 28 (Statement)


State 124

   46 ExpRest: ',' . Exp

    TRUE             shift, and go to state 72
    FALSE            shift, and go to state 73
    THIS             shift, and go to state 74
    NEW              shift, and go to state 75
    INTEGER_LITERAL  shift, and go to state 76
    ID               shift, and go to state 77
    '('              shift, and go to state 78
    '!'              shift, and go to state 79

    Exp  go to state 128


State 125

   43 ExpList: Exp ExpRests .

    $default  reduce using rule 43 (ExpList)


State 126

   45 ExpRests: ExpRest . ExpRests

    ','  shift, and go to state 124

    $default  reduce using rule 44 (ExpRests)

    ExpRests  go to state 129
    ExpRest   go to state 126


State 127

   32 Exp: Exp '.' ID '(' ExpList ')' .

    $default  reduce using rule 32 (Exp)


State 128

   29 Exp: Exp . BINOP Exp
   30    | Exp . '[' Exp ']'
   31    | Exp . '.' LENGTH
   32    | Exp . '.' ID '(' ExpList ')'
   46 ExpRest: ',' Exp .

    BINOP  shift, and go to state 92
    '['    shift, and go to state 93
    '.'    shift, and go to state 95

    $default  reduce using rule 46 (ExpRest)


State 129

   45 ExpRests: ExpRest ExpRests .

    $default  reduce using rule 45 (ExpRests)
