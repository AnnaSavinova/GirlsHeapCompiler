Terminals unused in grammar

   NOT


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program '\n'
    3        | program method_declaration

    4 method_declaration: main_declaration
    5                   | function_declaration
    6                   | subroutine_declaration

    7 main_declaration: main_header statement_list END PROGRAM ID

    8 main_header: PROGRAM ID '\n'

    9 function_header: FUNCTION ID signature '\n'

   10 subroutine_header: SUBROUTINE ID signature '\n'

   11 function_declaration: function_header statement_list END FUNCTION ID

   12 subroutine_declaration: subroutine_header statement_list END SUBROUTINE ID

   13 decl_params: '('
   14            | decl_params ID
   15            | decl_params ',' ID

   16 signature: decl_params ')'

   17 statement_list: /* empty */
   18               | statement_list statement

   19 statement: declaration
   20          | assignment
   21          | conditional_statement
   22          | while_statement
   23          | io_statement
   24          | BREAK '\n'
   25          | RETURN '\n'

   26 io_statement: READ read_param_list '\n'
   27             | WRITE write_param_list '\n'

   28 write_param_list: STRING
   29                 | expression
   30                 | write_param_list ',' STRING
   31                 | write_param_list ',' expression

   32 read_param_list: ID
   33                | read_param_list ',' ID

   34 while_statement: DO '\n' statement_list WHILE '(' logical_expression ')' '\n'

   35 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list END IF '\n'
   36                      | IF '(' logical_expression ')' THEN '\n' statement_list ELSE '\n' statement_list END IF '\n'

   37 assignment: ID '=' expression '\n'

   38 declaration: decl_list '\n'

   39 decl_list: TYPE DOUBLE_DOTS ID
   40          | decl_list ',' ID

   41 expression: expression '+' expression
   42           | expression '-' expression
   43           | expression '*' expression
   44           | expression '/' expression
   45           | logical_expression AND logical_expression
   46           | logical_expression OR logical_expression
   47           | invoke_expression
   48           | term

   49 logical_expression: expression LT expression
   50                   | expression GT expression
   51                   | expression LE expression
   52                   | expression GE expression
   53                   | expression EQ expression
   54                   | expression NEQ expression

   55 invoke_expression: CALL ID actual_param_list

   56 actual_params: '(' expression
   57              | actual_params ',' expression

   58 actual_param_list: /* empty */
   59                  | actual_params ')'

   60 term: constant
   61     | '(' expression ')'
   62     | ID

   63 constant: INT


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 8 9 10 24 25 26 27 34 35 36 37 38
'(' (40) 13 34 35 36 56 61
')' (41) 16 34 35 36 59 61
'*' (42) 43
'+' (43) 41
',' (44) 15 30 31 33 40 57
'-' (45) 42
'/' (47) 44
'=' (61) 37
error (256)
TYPE (258) 39
INT (259) 63
STRING (260) 28 30
LE (261) 51
GE (262) 52
NEQ (263) 54
EQ (264) 53
AND (265) 45
OR (266) 46
ID (267) 7 8 9 10 11 12 14 15 32 33 37 39 40 55 62
PROGRAM (268) 7 8
END (269) 7 11 12 35 36
FUNCTION (270) 9 11
SUBROUTINE (271) 10 12
DOUBLE_DOTS (272) 39
DO (273) 34
IF (274) 35 36
THEN (275) 35 36
ELSE (276) 36
WHILE (277) 34
BREAK (278) 24
RETURN (279) 25
CALL (280) 55
READ (281) 26
WRITE (282) 27
GT (283) 50
LT (284) 49
NOT (285)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2 3, on right: 0 2 3
method_declaration (42)
    on left: 4 5 6, on right: 3
main_declaration (43)
    on left: 7, on right: 4
main_header (44)
    on left: 8, on right: 7
function_header (45)
    on left: 9, on right: 11
subroutine_header (46)
    on left: 10, on right: 12
function_declaration (47)
    on left: 11, on right: 5
subroutine_declaration (48)
    on left: 12, on right: 6
decl_params (49)
    on left: 13 14 15, on right: 14 15 16
signature (50)
    on left: 16, on right: 9 10
statement_list (51)
    on left: 17 18, on right: 7 11 12 18 34 35 36
statement (52)
    on left: 19 20 21 22 23 24 25, on right: 18
io_statement (53)
    on left: 26 27, on right: 23
write_param_list (54)
    on left: 28 29 30 31, on right: 27 30 31
read_param_list (55)
    on left: 32 33, on right: 26 33
while_statement (56)
    on left: 34, on right: 22
conditional_statement (57)
    on left: 35 36, on right: 21
assignment (58)
    on left: 37, on right: 20
declaration (59)
    on left: 38, on right: 19
decl_list (60)
    on left: 39 40, on right: 38 40
expression (61)
    on left: 41 42 43 44 45 46 47 48, on right: 29 31 37 41 42 43 44
    49 50 51 52 53 54 56 57 61
logical_expression (62)
    on left: 49 50 51 52 53 54, on right: 34 35 36 45 46
invoke_expression (63)
    on left: 55, on right: 47
actual_params (64)
    on left: 56 57, on right: 57 59
actual_param_list (65)
    on left: 58 59, on right: 55
term (66)
    on left: 60 61 62, on right: 48
constant (67)
    on left: 63, on right: 60


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . '\n'
    3        | program . method_declaration

    $end        shift, and go to state 2
    PROGRAM     shift, and go to state 3
    FUNCTION    shift, and go to state 4
    SUBROUTINE  shift, and go to state 5
    '\n'        shift, and go to state 6

    method_declaration      go to state 7
    main_declaration        go to state 8
    main_header             go to state 9
    function_header         go to state 10
    subroutine_header       go to state 11
    function_declaration    go to state 12
    subroutine_declaration  go to state 13


State 2

    0 $accept: program $end .

    $default  accept


State 3

    8 main_header: PROGRAM . ID '\n'

    ID  shift, and go to state 14


State 4

    9 function_header: FUNCTION . ID signature '\n'

    ID  shift, and go to state 15


State 5

   10 subroutine_header: SUBROUTINE . ID signature '\n'

    ID  shift, and go to state 16


State 6

    2 program: program '\n' .

    $default  reduce using rule 2 (program)


State 7

    3 program: program method_declaration .

    $default  reduce using rule 3 (program)


State 8

    4 method_declaration: main_declaration .

    $default  reduce using rule 4 (method_declaration)


State 9

    7 main_declaration: main_header . statement_list END PROGRAM ID

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 17


State 10

   11 function_declaration: function_header . statement_list END FUNCTION ID

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 18


State 11

   12 subroutine_declaration: subroutine_header . statement_list END SUBROUTINE ID

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 19


State 12

    5 method_declaration: function_declaration .

    $default  reduce using rule 5 (method_declaration)


State 13

    6 method_declaration: subroutine_declaration .

    $default  reduce using rule 6 (method_declaration)


State 14

    8 main_header: PROGRAM ID . '\n'

    '\n'  shift, and go to state 20


State 15

    9 function_header: FUNCTION ID . signature '\n'

    '('  shift, and go to state 21

    decl_params  go to state 22
    signature    go to state 23


State 16

   10 subroutine_header: SUBROUTINE ID . signature '\n'

    '('  shift, and go to state 21

    decl_params  go to state 22
    signature    go to state 24


State 17

    7 main_declaration: main_header statement_list . END PROGRAM ID
   18 statement_list: statement_list . statement

    TYPE    shift, and go to state 25
    ID      shift, and go to state 26
    END     shift, and go to state 27
    DO      shift, and go to state 28
    IF      shift, and go to state 29
    BREAK   shift, and go to state 30
    RETURN  shift, and go to state 31
    READ    shift, and go to state 32
    WRITE   shift, and go to state 33

    statement              go to state 34
    io_statement           go to state 35
    while_statement        go to state 36
    conditional_statement  go to state 37
    assignment             go to state 38
    declaration            go to state 39
    decl_list              go to state 40


State 18

   11 function_declaration: function_header statement_list . END FUNCTION ID
   18 statement_list: statement_list . statement

    TYPE    shift, and go to state 25
    ID      shift, and go to state 26
    END     shift, and go to state 41
    DO      shift, and go to state 28
    IF      shift, and go to state 29
    BREAK   shift, and go to state 30
    RETURN  shift, and go to state 31
    READ    shift, and go to state 32
    WRITE   shift, and go to state 33

    statement              go to state 34
    io_statement           go to state 35
    while_statement        go to state 36
    conditional_statement  go to state 37
    assignment             go to state 38
    declaration            go to state 39
    decl_list              go to state 40


State 19

   12 subroutine_declaration: subroutine_header statement_list . END SUBROUTINE ID
   18 statement_list: statement_list . statement

    TYPE    shift, and go to state 25
    ID      shift, and go to state 26
    END     shift, and go to state 42
    DO      shift, and go to state 28
    IF      shift, and go to state 29
    BREAK   shift, and go to state 30
    RETURN  shift, and go to state 31
    READ    shift, and go to state 32
    WRITE   shift, and go to state 33

    statement              go to state 34
    io_statement           go to state 35
    while_statement        go to state 36
    conditional_statement  go to state 37
    assignment             go to state 38
    declaration            go to state 39
    decl_list              go to state 40


State 20

    8 main_header: PROGRAM ID '\n' .

    $default  reduce using rule 8 (main_header)


State 21

   13 decl_params: '(' .

    $default  reduce using rule 13 (decl_params)


State 22

   14 decl_params: decl_params . ID
   15            | decl_params . ',' ID
   16 signature: decl_params . ')'

    ID   shift, and go to state 43
    ','  shift, and go to state 44
    ')'  shift, and go to state 45


State 23

    9 function_header: FUNCTION ID signature . '\n'

    '\n'  shift, and go to state 46


State 24

   10 subroutine_header: SUBROUTINE ID signature . '\n'

    '\n'  shift, and go to state 47


State 25

   39 decl_list: TYPE . DOUBLE_DOTS ID

    DOUBLE_DOTS  shift, and go to state 48


State 26

   37 assignment: ID . '=' expression '\n'

    '='  shift, and go to state 49


State 27

    7 main_declaration: main_header statement_list END . PROGRAM ID

    PROGRAM  shift, and go to state 50


State 28

   34 while_statement: DO . '\n' statement_list WHILE '(' logical_expression ')' '\n'

    '\n'  shift, and go to state 51


State 29

   35 conditional_statement: IF . '(' logical_expression ')' THEN '\n' statement_list END IF '\n'
   36                      | IF . '(' logical_expression ')' THEN '\n' statement_list ELSE '\n' statement_list END IF '\n'

    '('  shift, and go to state 52


State 30

   24 statement: BREAK . '\n'

    '\n'  shift, and go to state 53


State 31

   25 statement: RETURN . '\n'

    '\n'  shift, and go to state 54


State 32

   26 io_statement: READ . read_param_list '\n'

    ID  shift, and go to state 55

    read_param_list  go to state 56


State 33

   27 io_statement: WRITE . write_param_list '\n'

    INT     shift, and go to state 57
    STRING  shift, and go to state 58
    ID      shift, and go to state 59
    CALL    shift, and go to state 60
    '('     shift, and go to state 61

    write_param_list    go to state 62
    expression          go to state 63
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 34

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 35

   23 statement: io_statement .

    $default  reduce using rule 23 (statement)


State 36

   22 statement: while_statement .

    $default  reduce using rule 22 (statement)


State 37

   21 statement: conditional_statement .

    $default  reduce using rule 21 (statement)


State 38

   20 statement: assignment .

    $default  reduce using rule 20 (statement)


State 39

   19 statement: declaration .

    $default  reduce using rule 19 (statement)


State 40

   38 declaration: decl_list . '\n'
   40 decl_list: decl_list . ',' ID

    '\n'  shift, and go to state 68
    ','   shift, and go to state 69


State 41

   11 function_declaration: function_header statement_list END . FUNCTION ID

    FUNCTION  shift, and go to state 70


State 42

   12 subroutine_declaration: subroutine_header statement_list END . SUBROUTINE ID

    SUBROUTINE  shift, and go to state 71


State 43

   14 decl_params: decl_params ID .

    $default  reduce using rule 14 (decl_params)


State 44

   15 decl_params: decl_params ',' . ID

    ID  shift, and go to state 72


State 45

   16 signature: decl_params ')' .

    $default  reduce using rule 16 (signature)


State 46

    9 function_header: FUNCTION ID signature '\n' .

    $default  reduce using rule 9 (function_header)


State 47

   10 subroutine_header: SUBROUTINE ID signature '\n' .

    $default  reduce using rule 10 (subroutine_header)


State 48

   39 decl_list: TYPE DOUBLE_DOTS . ID

    ID  shift, and go to state 73


State 49

   37 assignment: ID '=' . expression '\n'

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 74
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 50

    7 main_declaration: main_header statement_list END PROGRAM . ID

    ID  shift, and go to state 75


State 51

   34 while_statement: DO '\n' . statement_list WHILE '(' logical_expression ')' '\n'

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 76


State 52

   35 conditional_statement: IF '(' . logical_expression ')' THEN '\n' statement_list END IF '\n'
   36                      | IF '(' . logical_expression ')' THEN '\n' statement_list ELSE '\n' statement_list END IF '\n'

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 77
    logical_expression  go to state 78
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 53

   24 statement: BREAK '\n' .

    $default  reduce using rule 24 (statement)


State 54

   25 statement: RETURN '\n' .

    $default  reduce using rule 25 (statement)


State 55

   32 read_param_list: ID .

    $default  reduce using rule 32 (read_param_list)


State 56

   26 io_statement: READ read_param_list . '\n'
   33 read_param_list: read_param_list . ',' ID

    '\n'  shift, and go to state 79
    ','   shift, and go to state 80


State 57

   63 constant: INT .

    $default  reduce using rule 63 (constant)


State 58

   28 write_param_list: STRING .

    $default  reduce using rule 28 (write_param_list)


State 59

   62 term: ID .

    $default  reduce using rule 62 (term)


State 60

   55 invoke_expression: CALL . ID actual_param_list

    ID  shift, and go to state 81


State 61

   61 term: '(' . expression ')'

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 82
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 62

   27 io_statement: WRITE write_param_list . '\n'
   30 write_param_list: write_param_list . ',' STRING
   31                 | write_param_list . ',' expression

    '\n'  shift, and go to state 83
    ','   shift, and go to state 84


State 63

   29 write_param_list: expression .
   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    LE   shift, and go to state 85
    GE   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 29 (write_param_list)


State 64

   45 expression: logical_expression . AND logical_expression
   46           | logical_expression . OR logical_expression

    AND  shift, and go to state 95
    OR   shift, and go to state 96


State 65

   47 expression: invoke_expression .

    $default  reduce using rule 47 (expression)


State 66

   48 expression: term .

    $default  reduce using rule 48 (expression)


State 67

   60 term: constant .

    $default  reduce using rule 60 (term)


State 68

   38 declaration: decl_list '\n' .

    $default  reduce using rule 38 (declaration)


State 69

   40 decl_list: decl_list ',' . ID

    ID  shift, and go to state 97


State 70

   11 function_declaration: function_header statement_list END FUNCTION . ID

    ID  shift, and go to state 98


State 71

   12 subroutine_declaration: subroutine_header statement_list END SUBROUTINE . ID

    ID  shift, and go to state 99


State 72

   15 decl_params: decl_params ',' ID .

    $default  reduce using rule 15 (decl_params)


State 73

   39 decl_list: TYPE DOUBLE_DOTS ID .

    $default  reduce using rule 39 (decl_list)


State 74

   37 assignment: ID '=' expression . '\n'
   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    LE    shift, and go to state 85
    GE    shift, and go to state 86
    NEQ   shift, and go to state 87
    EQ    shift, and go to state 88
    GT    shift, and go to state 89
    LT    shift, and go to state 90
    '+'   shift, and go to state 91
    '-'   shift, and go to state 92
    '*'   shift, and go to state 93
    '/'   shift, and go to state 94
    '\n'  shift, and go to state 100


State 75

    7 main_declaration: main_header statement_list END PROGRAM ID .

    $default  reduce using rule 7 (main_declaration)


State 76

   18 statement_list: statement_list . statement
   34 while_statement: DO '\n' statement_list . WHILE '(' logical_expression ')' '\n'

    TYPE    shift, and go to state 25
    ID      shift, and go to state 26
    DO      shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 101
    BREAK   shift, and go to state 30
    RETURN  shift, and go to state 31
    READ    shift, and go to state 32
    WRITE   shift, and go to state 33

    statement              go to state 34
    io_statement           go to state 35
    while_statement        go to state 36
    conditional_statement  go to state 37
    assignment             go to state 38
    declaration            go to state 39
    decl_list              go to state 40


State 77

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    LE   shift, and go to state 85
    GE   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94


State 78

   35 conditional_statement: IF '(' logical_expression . ')' THEN '\n' statement_list END IF '\n'
   36                      | IF '(' logical_expression . ')' THEN '\n' statement_list ELSE '\n' statement_list END IF '\n'
   45 expression: logical_expression . AND logical_expression
   46           | logical_expression . OR logical_expression

    AND  shift, and go to state 95
    OR   shift, and go to state 96
    ')'  shift, and go to state 102


State 79

   26 io_statement: READ read_param_list '\n' .

    $default  reduce using rule 26 (io_statement)


State 80

   33 read_param_list: read_param_list ',' . ID

    ID  shift, and go to state 103


State 81

   55 invoke_expression: CALL ID . actual_param_list

    '('  shift, and go to state 104

    $default  reduce using rule 58 (actual_param_list)

    actual_params      go to state 105
    actual_param_list  go to state 106


State 82

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression
   61 term: '(' expression . ')'

    LE   shift, and go to state 85
    GE   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    ')'  shift, and go to state 107


State 83

   27 io_statement: WRITE write_param_list '\n' .

    $default  reduce using rule 27 (io_statement)


State 84

   30 write_param_list: write_param_list ',' . STRING
   31                 | write_param_list ',' . expression

    INT     shift, and go to state 57
    STRING  shift, and go to state 108
    ID      shift, and go to state 59
    CALL    shift, and go to state 60
    '('     shift, and go to state 61

    expression          go to state 109
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 85

   51 logical_expression: expression LE . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 110
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 86

   52 logical_expression: expression GE . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 111
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 87

   54 logical_expression: expression NEQ . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 112
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 88

   53 logical_expression: expression EQ . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 113
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 89

   50 logical_expression: expression GT . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 114
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 90

   49 logical_expression: expression LT . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 115
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 91

   41 expression: expression '+' . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 116
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 92

   42 expression: expression '-' . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 117
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 93

   43 expression: expression '*' . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 118
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 94

   44 expression: expression '/' . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 119
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 95

   45 expression: logical_expression AND . logical_expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 77
    logical_expression  go to state 120
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 96

   46 expression: logical_expression OR . logical_expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 77
    logical_expression  go to state 121
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 97

   40 decl_list: decl_list ',' ID .

    $default  reduce using rule 40 (decl_list)


State 98

   11 function_declaration: function_header statement_list END FUNCTION ID .

    $default  reduce using rule 11 (function_declaration)


State 99

   12 subroutine_declaration: subroutine_header statement_list END SUBROUTINE ID .

    $default  reduce using rule 12 (subroutine_declaration)


State 100

   37 assignment: ID '=' expression '\n' .

    $default  reduce using rule 37 (assignment)


State 101

   34 while_statement: DO '\n' statement_list WHILE . '(' logical_expression ')' '\n'

    '('  shift, and go to state 122


State 102

   35 conditional_statement: IF '(' logical_expression ')' . THEN '\n' statement_list END IF '\n'
   36                      | IF '(' logical_expression ')' . THEN '\n' statement_list ELSE '\n' statement_list END IF '\n'

    THEN  shift, and go to state 123


State 103

   33 read_param_list: read_param_list ',' ID .

    $default  reduce using rule 33 (read_param_list)


State 104

   56 actual_params: '(' . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 124
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 105

   57 actual_params: actual_params . ',' expression
   59 actual_param_list: actual_params . ')'

    ','  shift, and go to state 125
    ')'  shift, and go to state 126


State 106

   55 invoke_expression: CALL ID actual_param_list .

    $default  reduce using rule 55 (invoke_expression)


State 107

   61 term: '(' expression ')' .

    $default  reduce using rule 61 (term)


State 108

   30 write_param_list: write_param_list ',' STRING .

    $default  reduce using rule 30 (write_param_list)


State 109

   31 write_param_list: write_param_list ',' expression .
   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    LE   shift, and go to state 85
    GE   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 31 (write_param_list)


State 110

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   51                   | expression LE expression .
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 51 (logical_expression)


State 111

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   52                   | expression GE expression .
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 52 (logical_expression)


State 112

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression
   54                   | expression NEQ expression .

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 54 (logical_expression)


State 113

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   53                   | expression EQ expression .
   54                   | expression . NEQ expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 53 (logical_expression)


State 114

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   50                   | expression GT expression .
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 50 (logical_expression)


State 115

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   49                   | expression LT expression .
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 49 (logical_expression)


State 116

   41 expression: expression . '+' expression
   41           | expression '+' expression .
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 41 (expression)


State 117

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   42           | expression '-' expression .
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 42 (expression)


State 118

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   43           | expression '*' expression .
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    $default  reduce using rule 43 (expression)


State 119

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   44           | expression '/' expression .
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression

    $default  reduce using rule 44 (expression)


State 120

   45 expression: logical_expression . AND logical_expression
   45           | logical_expression AND logical_expression .
   46           | logical_expression . OR logical_expression

    $default  reduce using rule 45 (expression)


State 121

   45 expression: logical_expression . AND logical_expression
   46           | logical_expression . OR logical_expression
   46           | logical_expression OR logical_expression .

    AND  shift, and go to state 95

    $default  reduce using rule 46 (expression)


State 122

   34 while_statement: DO '\n' statement_list WHILE '(' . logical_expression ')' '\n'

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 77
    logical_expression  go to state 127
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 123

   35 conditional_statement: IF '(' logical_expression ')' THEN . '\n' statement_list END IF '\n'
   36                      | IF '(' logical_expression ')' THEN . '\n' statement_list ELSE '\n' statement_list END IF '\n'

    '\n'  shift, and go to state 128


State 124

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression
   56 actual_params: '(' expression .

    LE   shift, and go to state 85
    GE   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 56 (actual_params)


State 125

   57 actual_params: actual_params ',' . expression

    INT   shift, and go to state 57
    ID    shift, and go to state 59
    CALL  shift, and go to state 60
    '('   shift, and go to state 61

    expression          go to state 129
    logical_expression  go to state 64
    invoke_expression   go to state 65
    term                go to state 66
    constant            go to state 67


State 126

   59 actual_param_list: actual_params ')' .

    $default  reduce using rule 59 (actual_param_list)


State 127

   34 while_statement: DO '\n' statement_list WHILE '(' logical_expression . ')' '\n'
   45 expression: logical_expression . AND logical_expression
   46           | logical_expression . OR logical_expression

    AND  shift, and go to state 95
    OR   shift, and go to state 96
    ')'  shift, and go to state 130


State 128

   35 conditional_statement: IF '(' logical_expression ')' THEN '\n' . statement_list END IF '\n'
   36                      | IF '(' logical_expression ')' THEN '\n' . statement_list ELSE '\n' statement_list END IF '\n'

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 131


State 129

   41 expression: expression . '+' expression
   42           | expression . '-' expression
   43           | expression . '*' expression
   44           | expression . '/' expression
   49 logical_expression: expression . LT expression
   50                   | expression . GT expression
   51                   | expression . LE expression
   52                   | expression . GE expression
   53                   | expression . EQ expression
   54                   | expression . NEQ expression
   57 actual_params: actual_params ',' expression .

    LE   shift, and go to state 85
    GE   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94

    $default  reduce using rule 57 (actual_params)


State 130

   34 while_statement: DO '\n' statement_list WHILE '(' logical_expression ')' . '\n'

    '\n'  shift, and go to state 132


State 131

   18 statement_list: statement_list . statement
   35 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list . END IF '\n'
   36                      | IF '(' logical_expression ')' THEN '\n' statement_list . ELSE '\n' statement_list END IF '\n'

    TYPE    shift, and go to state 25
    ID      shift, and go to state 26
    END     shift, and go to state 133
    DO      shift, and go to state 28
    IF      shift, and go to state 29
    ELSE    shift, and go to state 134
    BREAK   shift, and go to state 30
    RETURN  shift, and go to state 31
    READ    shift, and go to state 32
    WRITE   shift, and go to state 33

    statement              go to state 34
    io_statement           go to state 35
    while_statement        go to state 36
    conditional_statement  go to state 37
    assignment             go to state 38
    declaration            go to state 39
    decl_list              go to state 40


State 132

   34 while_statement: DO '\n' statement_list WHILE '(' logical_expression ')' '\n' .

    $default  reduce using rule 34 (while_statement)


State 133

   35 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list END . IF '\n'

    IF  shift, and go to state 135


State 134

   36 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list ELSE . '\n' statement_list END IF '\n'

    '\n'  shift, and go to state 136


State 135

   35 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list END IF . '\n'

    '\n'  shift, and go to state 137


State 136

   36 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list ELSE '\n' . statement_list END IF '\n'

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 138


State 137

   35 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list END IF '\n' .

    $default  reduce using rule 35 (conditional_statement)


State 138

   18 statement_list: statement_list . statement
   36 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list ELSE '\n' statement_list . END IF '\n'

    TYPE    shift, and go to state 25
    ID      shift, and go to state 26
    END     shift, and go to state 139
    DO      shift, and go to state 28
    IF      shift, and go to state 29
    BREAK   shift, and go to state 30
    RETURN  shift, and go to state 31
    READ    shift, and go to state 32
    WRITE   shift, and go to state 33

    statement              go to state 34
    io_statement           go to state 35
    while_statement        go to state 36
    conditional_statement  go to state 37
    assignment             go to state 38
    declaration            go to state 39
    decl_list              go to state 40


State 139

   36 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list ELSE '\n' statement_list END . IF '\n'

    IF  shift, and go to state 140


State 140

   36 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list ELSE '\n' statement_list END IF . '\n'

    '\n'  shift, and go to state 141


State 141

   36 conditional_statement: IF '(' logical_expression ')' THEN '\n' statement_list ELSE '\n' statement_list END IF '\n' .

    $default  reduce using rule 36 (conditional_statement)
